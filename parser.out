Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    COMMENTBLOCK
    EOF

Grammar

Rule 0     S' -> program
Rule 1     program -> function program
Rule 2     program -> external-declaration program
Rule 3     program -> empty
Rule 4     external-declaration -> type assignment SEMICOLON
Rule 5     external-declaration -> array_usage SEMICOLON
Rule 6     external-declaration -> type array_usage SEMICOLON
Rule 7     external-declaration -> macro_definition
Rule 8     external-declaration -> file_inclusion
Rule 9     declaration -> type assignment SEMICOLON
Rule 10    declaration -> assignment SEMICOLON
Rule 11    declaration -> function_call SEMICOLON
Rule 12    declaration -> array_usage SEMICOLON
Rule 13    declaration -> type array_usage SEMICOLON
Rule 14    assignment -> ID ASSIGN assignment
Rule 15    assignment -> ID ASSIGN function_call
Rule 16    assignment -> ID ASSIGN array_usage
Rule 17    assignment -> array_usage ASSIGN assignment
Rule 18    assignment -> ID COMMA assignment
Rule 19    assignment -> NUMBER COMMA assignment
Rule 20    assignment -> ID PLUS assignment
Rule 21    assignment -> ID MINUS assignment
Rule 22    assignment -> ID TIMES assignment
Rule 23    assignment -> ID DIVIDE assignment
Rule 24    assignment -> ID MODULUS assignment
Rule 25    assignment -> NUMBER PLUS assignment
Rule 26    assignment -> NUMBER MINUS assignment
Rule 27    assignment -> NUMBER TIMES assignment
Rule 28    assignment -> NUMBER DIVIDE assignment
Rule 29    assignment -> NUMBER MODULUS assignment
Rule 30    assignment -> APOST assignment APOST
Rule 31    assignment -> LPAREN assignment RPAREN
Rule 32    assignment -> MINUS assignment
Rule 33    assignment -> NUMBER PLUS PLUS
Rule 34    assignment -> ID PLUS PLUS
Rule 35    assignment -> array_usage PLUS PLUS
Rule 36    assignment -> NUMBER MINUS MINUS
Rule 37    assignment -> ID MINUS MINUS
Rule 38    assignment -> array_usage MINUS MINUS
Rule 39    assignment -> NUMBER
Rule 40    assignment -> ID
Rule 41    assignment -> LETTER
Rule 42    function_call -> ID LPAREN RPAREN
Rule 43    function_call -> ID LPAREN assignment RPAREN
Rule 44    array_usage -> ID LBRACKET assignment RBRACKET
Rule 45    function -> type ID LPAREN argument_list_option RPAREN compound_statement
Rule 46    argument_list_option -> argument_list
Rule 47    argument_list_option -> empty
Rule 48    argument_list -> argument_list COMMA argument
Rule 49    argument_list -> argument
Rule 50    argument -> type ID
Rule 51    compound_statement -> LBRACE statement_list RBRACE
Rule 52    statement_list -> statement_list statement
Rule 53    statement_list -> empty
Rule 54    statement -> iteration_statement
Rule 55    statement -> declaration
Rule 56    statement -> selection_statement
Rule 57    statement -> return-statement
Rule 58    type -> INT
Rule 59    type -> FLOAT
Rule 60    type -> CHAR
Rule 61    type -> VOID
Rule 62    iteration_statement -> WHILE LPAREN expression RPAREN compound_statement
Rule 63    iteration_statement -> WHILE LPAREN expression RPAREN statement
Rule 64    iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
Rule 65    iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
Rule 66    selection_statement -> IF LPAREN expression RPAREN compound_statement
Rule 67    selection_statement -> IF LPAREN expression RPAREN statement
Rule 68    selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement
Rule 69    selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement
Rule 70    selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement
Rule 71    selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 72    return-statement -> RETURN SEMICOLON
Rule 73    return-statement -> RETURN expression SEMICOLON
Rule 74    expression -> expression EQUALS expression
Rule 75    expression -> expression LESS expression
Rule 76    expression -> expression GREATER expression
Rule 77    expression -> expression AND expression
Rule 78    expression -> expression OR expression
Rule 79    expression -> NOT expression
Rule 80    expression -> assignment
Rule 81    expression -> array_usage
Rule 82    macro_definition -> POUND DEFINE ID assignment
Rule 83    file_inclusion -> POUND INCLUDE LESS HEADER GREATER
Rule 84    file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE
Rule 85    empty -> <empty>

Terminals, with rules where they appear

AND                  : 77
APOST                : 30 30
ASSIGN               : 14 15 16 17
CHAR                 : 60
COMMA                : 18 19 48
COMMENT              : 
COMMENTBLOCK         : 
DEFINE               : 82
DIVIDE               : 23 28
DO                   : 64 65
ELSE                 : 68 69 70 71
EOF                  : 
EQUALS               : 74
FLOAT                : 59
GREATER              : 76 83
HEADER               : 83 84
ID                   : 14 15 16 18 20 21 22 23 24 34 37 40 42 43 44 45 50 82
IF                   : 66 67 68 69 70 71
INCLUDE              : 83 84
INT                  : 58
LBRACE               : 51
LBRACKET             : 44
LESS                 : 75 83
LETTER               : 41
LPAREN               : 31 42 43 45 62 63 64 65 66 67 68 69 70 71
MINUS                : 21 26 32 36 36 37 37 38 38
MODULUS              : 24 29
NOT                  : 79
NUMBER               : 19 25 26 27 28 29 33 36 39
OR                   : 78
PLUS                 : 20 25 33 33 34 34 35 35
POUND                : 82 83 84
QUOTE                : 84 84
RBRACE               : 51
RBRACKET             : 44
RETURN               : 72 73
RPAREN               : 31 42 43 45 62 63 64 65 66 67 68 69 70 71
SEMICOLON            : 4 5 6 9 10 11 12 13 64 65 72 73
TIMES                : 22 27
VOID                 : 61
WHILE                : 62 63 64 65
error                : 

Nonterminals, with rules where they appear

argument             : 48 49
argument_list        : 46 48
argument_list_option : 45
array_usage          : 5 6 12 13 16 17 35 38 81
assignment           : 4 9 10 14 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 43 44 80 82
compound_statement   : 45 62 64 66 68 68 69 70
declaration          : 55
empty                : 3 47 53
expression           : 62 63 64 65 66 67 68 69 70 71 73 74 74 75 75 76 76 77 77 78 78 79
external-declaration : 2
file_inclusion       : 8
function             : 1
function_call        : 11 15
iteration_statement  : 54
macro_definition     : 7
program              : 1 2 0
return-statement     : 57
selection_statement  : 56
statement            : 52 63 65 67 69 70 71 71
statement_list       : 51 52
type                 : 4 6 9 13 45 50

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function program
    (2) program -> . external-declaration program
    (3) program -> . empty
    (45) function -> . type ID LPAREN argument_list_option RPAREN compound_statement
    (4) external-declaration -> . type assignment SEMICOLON
    (5) external-declaration -> . array_usage SEMICOLON
    (6) external-declaration -> . type array_usage SEMICOLON
    (7) external-declaration -> . macro_definition
    (8) external-declaration -> . file_inclusion
    (85) empty -> .
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR
    (61) type -> . VOID
    (44) array_usage -> . ID LBRACKET assignment RBRACKET
    (82) macro_definition -> . POUND DEFINE ID assignment
    (83) file_inclusion -> . POUND INCLUDE LESS HEADER GREATER
    (84) file_inclusion -> . POUND INCLUDE QUOTE HEADER QUOTE

    $end            reduce using rule 85 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    ID              shift and go to state 6
    POUND           shift and go to state 14

    program                        shift and go to state 1
    function                       shift and go to state 2
    external-declaration           shift and go to state 3
    empty                          shift and go to state 4
    type                           shift and go to state 5
    array_usage                    shift and go to state 7
    macro_definition               shift and go to state 8
    file_inclusion                 shift and go to state 9

state 1

    (0) S' -> program .



state 2

    (1) program -> function . program
    (1) program -> . function program
    (2) program -> . external-declaration program
    (3) program -> . empty
    (45) function -> . type ID LPAREN argument_list_option RPAREN compound_statement
    (4) external-declaration -> . type assignment SEMICOLON
    (5) external-declaration -> . array_usage SEMICOLON
    (6) external-declaration -> . type array_usage SEMICOLON
    (7) external-declaration -> . macro_definition
    (8) external-declaration -> . file_inclusion
    (85) empty -> .
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR
    (61) type -> . VOID
    (44) array_usage -> . ID LBRACKET assignment RBRACKET
    (82) macro_definition -> . POUND DEFINE ID assignment
    (83) file_inclusion -> . POUND INCLUDE LESS HEADER GREATER
    (84) file_inclusion -> . POUND INCLUDE QUOTE HEADER QUOTE

    $end            reduce using rule 85 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    ID              shift and go to state 6
    POUND           shift and go to state 14

    function                       shift and go to state 2
    program                        shift and go to state 15
    external-declaration           shift and go to state 3
    empty                          shift and go to state 4
    type                           shift and go to state 5
    array_usage                    shift and go to state 7
    macro_definition               shift and go to state 8
    file_inclusion                 shift and go to state 9

state 3

    (2) program -> external-declaration . program
    (1) program -> . function program
    (2) program -> . external-declaration program
    (3) program -> . empty
    (45) function -> . type ID LPAREN argument_list_option RPAREN compound_statement
    (4) external-declaration -> . type assignment SEMICOLON
    (5) external-declaration -> . array_usage SEMICOLON
    (6) external-declaration -> . type array_usage SEMICOLON
    (7) external-declaration -> . macro_definition
    (8) external-declaration -> . file_inclusion
    (85) empty -> .
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR
    (61) type -> . VOID
    (44) array_usage -> . ID LBRACKET assignment RBRACKET
    (82) macro_definition -> . POUND DEFINE ID assignment
    (83) file_inclusion -> . POUND INCLUDE LESS HEADER GREATER
    (84) file_inclusion -> . POUND INCLUDE QUOTE HEADER QUOTE

    $end            reduce using rule 85 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    ID              shift and go to state 6
    POUND           shift and go to state 14

    external-declaration           shift and go to state 3
    program                        shift and go to state 16
    function                       shift and go to state 2
    empty                          shift and go to state 4
    type                           shift and go to state 5
    array_usage                    shift and go to state 7
    macro_definition               shift and go to state 8
    file_inclusion                 shift and go to state 9

state 4

    (3) program -> empty .

    $end            reduce using rule 3 (program -> empty .)


state 5

    (45) function -> type . ID LPAREN argument_list_option RPAREN compound_statement
    (4) external-declaration -> type . assignment SEMICOLON
    (6) external-declaration -> type . array_usage SEMICOLON
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 17
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 19
    array_usage                    shift and go to state 20

state 6

    (44) array_usage -> ID . LBRACKET assignment RBRACKET

    LBRACKET        shift and go to state 25


state 7

    (5) external-declaration -> array_usage . SEMICOLON

    SEMICOLON       shift and go to state 26


state 8

    (7) external-declaration -> macro_definition .

    INT             reduce using rule 7 (external-declaration -> macro_definition .)
    FLOAT           reduce using rule 7 (external-declaration -> macro_definition .)
    CHAR            reduce using rule 7 (external-declaration -> macro_definition .)
    VOID            reduce using rule 7 (external-declaration -> macro_definition .)
    ID              reduce using rule 7 (external-declaration -> macro_definition .)
    POUND           reduce using rule 7 (external-declaration -> macro_definition .)
    $end            reduce using rule 7 (external-declaration -> macro_definition .)


state 9

    (8) external-declaration -> file_inclusion .

    INT             reduce using rule 8 (external-declaration -> file_inclusion .)
    FLOAT           reduce using rule 8 (external-declaration -> file_inclusion .)
    CHAR            reduce using rule 8 (external-declaration -> file_inclusion .)
    VOID            reduce using rule 8 (external-declaration -> file_inclusion .)
    ID              reduce using rule 8 (external-declaration -> file_inclusion .)
    POUND           reduce using rule 8 (external-declaration -> file_inclusion .)
    $end            reduce using rule 8 (external-declaration -> file_inclusion .)


state 10

    (58) type -> INT .

    ID              reduce using rule 58 (type -> INT .)
    NUMBER          reduce using rule 58 (type -> INT .)
    APOST           reduce using rule 58 (type -> INT .)
    LPAREN          reduce using rule 58 (type -> INT .)
    MINUS           reduce using rule 58 (type -> INT .)
    LETTER          reduce using rule 58 (type -> INT .)


state 11

    (59) type -> FLOAT .

    ID              reduce using rule 59 (type -> FLOAT .)
    NUMBER          reduce using rule 59 (type -> FLOAT .)
    APOST           reduce using rule 59 (type -> FLOAT .)
    LPAREN          reduce using rule 59 (type -> FLOAT .)
    MINUS           reduce using rule 59 (type -> FLOAT .)
    LETTER          reduce using rule 59 (type -> FLOAT .)


state 12

    (60) type -> CHAR .

    ID              reduce using rule 60 (type -> CHAR .)
    NUMBER          reduce using rule 60 (type -> CHAR .)
    APOST           reduce using rule 60 (type -> CHAR .)
    LPAREN          reduce using rule 60 (type -> CHAR .)
    MINUS           reduce using rule 60 (type -> CHAR .)
    LETTER          reduce using rule 60 (type -> CHAR .)


state 13

    (61) type -> VOID .

    ID              reduce using rule 61 (type -> VOID .)
    NUMBER          reduce using rule 61 (type -> VOID .)
    APOST           reduce using rule 61 (type -> VOID .)
    LPAREN          reduce using rule 61 (type -> VOID .)
    MINUS           reduce using rule 61 (type -> VOID .)
    LETTER          reduce using rule 61 (type -> VOID .)


state 14

    (82) macro_definition -> POUND . DEFINE ID assignment
    (83) file_inclusion -> POUND . INCLUDE LESS HEADER GREATER
    (84) file_inclusion -> POUND . INCLUDE QUOTE HEADER QUOTE

    DEFINE          shift and go to state 27
    INCLUDE         shift and go to state 28


state 15

    (1) program -> function program .

    $end            reduce using rule 1 (program -> function program .)


state 16

    (2) program -> external-declaration program .

    $end            reduce using rule 2 (program -> external-declaration program .)


state 17

    (45) function -> type ID . LPAREN argument_list_option RPAREN compound_statement
    (14) assignment -> ID . ASSIGN assignment
    (15) assignment -> ID . ASSIGN function_call
    (16) assignment -> ID . ASSIGN array_usage
    (18) assignment -> ID . COMMA assignment
    (20) assignment -> ID . PLUS assignment
    (21) assignment -> ID . MINUS assignment
    (22) assignment -> ID . TIMES assignment
    (23) assignment -> ID . DIVIDE assignment
    (24) assignment -> ID . MODULUS assignment
    (34) assignment -> ID . PLUS PLUS
    (37) assignment -> ID . MINUS MINUS
    (40) assignment -> ID .
    (44) array_usage -> ID . LBRACKET assignment RBRACKET

    LPAREN          shift and go to state 29
    ASSIGN          shift and go to state 30
    COMMA           shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULUS         shift and go to state 36
    SEMICOLON       reduce using rule 40 (assignment -> ID .)
    LBRACKET        shift and go to state 25


state 18

    (31) assignment -> LPAREN . assignment RPAREN
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 37
    array_usage                    shift and go to state 39

state 19

    (4) external-declaration -> type assignment . SEMICOLON

    SEMICOLON       shift and go to state 40


state 20

    (6) external-declaration -> type array_usage . SEMICOLON
    (17) assignment -> array_usage . ASSIGN assignment
    (35) assignment -> array_usage . PLUS PLUS
    (38) assignment -> array_usage . MINUS MINUS

    SEMICOLON       shift and go to state 41
    ASSIGN          shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 21

    (19) assignment -> NUMBER . COMMA assignment
    (25) assignment -> NUMBER . PLUS assignment
    (26) assignment -> NUMBER . MINUS assignment
    (27) assignment -> NUMBER . TIMES assignment
    (28) assignment -> NUMBER . DIVIDE assignment
    (29) assignment -> NUMBER . MODULUS assignment
    (33) assignment -> NUMBER . PLUS PLUS
    (36) assignment -> NUMBER . MINUS MINUS
    (39) assignment -> NUMBER .

    COMMA           shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    MODULUS         shift and go to state 50
    SEMICOLON       reduce using rule 39 (assignment -> NUMBER .)
    RPAREN          reduce using rule 39 (assignment -> NUMBER .)
    APOST           reduce using rule 39 (assignment -> NUMBER .)
    RBRACKET        reduce using rule 39 (assignment -> NUMBER .)
    INT             reduce using rule 39 (assignment -> NUMBER .)
    FLOAT           reduce using rule 39 (assignment -> NUMBER .)
    CHAR            reduce using rule 39 (assignment -> NUMBER .)
    VOID            reduce using rule 39 (assignment -> NUMBER .)
    ID              reduce using rule 39 (assignment -> NUMBER .)
    POUND           reduce using rule 39 (assignment -> NUMBER .)
    $end            reduce using rule 39 (assignment -> NUMBER .)
    EQUALS          reduce using rule 39 (assignment -> NUMBER .)
    LESS            reduce using rule 39 (assignment -> NUMBER .)
    GREATER         reduce using rule 39 (assignment -> NUMBER .)
    AND             reduce using rule 39 (assignment -> NUMBER .)
    OR              reduce using rule 39 (assignment -> NUMBER .)


state 22

    (32) assignment -> MINUS . assignment
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 51
    array_usage                    shift and go to state 39

state 23

    (30) assignment -> APOST . assignment APOST
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 52
    array_usage                    shift and go to state 39

state 24

    (41) assignment -> LETTER .

    SEMICOLON       reduce using rule 41 (assignment -> LETTER .)
    RPAREN          reduce using rule 41 (assignment -> LETTER .)
    APOST           reduce using rule 41 (assignment -> LETTER .)
    RBRACKET        reduce using rule 41 (assignment -> LETTER .)
    INT             reduce using rule 41 (assignment -> LETTER .)
    FLOAT           reduce using rule 41 (assignment -> LETTER .)
    CHAR            reduce using rule 41 (assignment -> LETTER .)
    VOID            reduce using rule 41 (assignment -> LETTER .)
    ID              reduce using rule 41 (assignment -> LETTER .)
    POUND           reduce using rule 41 (assignment -> LETTER .)
    $end            reduce using rule 41 (assignment -> LETTER .)
    EQUALS          reduce using rule 41 (assignment -> LETTER .)
    LESS            reduce using rule 41 (assignment -> LETTER .)
    GREATER         reduce using rule 41 (assignment -> LETTER .)
    AND             reduce using rule 41 (assignment -> LETTER .)
    OR              reduce using rule 41 (assignment -> LETTER .)


state 25

    (44) array_usage -> ID LBRACKET . assignment RBRACKET
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 53
    array_usage                    shift and go to state 39

state 26

    (5) external-declaration -> array_usage SEMICOLON .

    INT             reduce using rule 5 (external-declaration -> array_usage SEMICOLON .)
    FLOAT           reduce using rule 5 (external-declaration -> array_usage SEMICOLON .)
    CHAR            reduce using rule 5 (external-declaration -> array_usage SEMICOLON .)
    VOID            reduce using rule 5 (external-declaration -> array_usage SEMICOLON .)
    ID              reduce using rule 5 (external-declaration -> array_usage SEMICOLON .)
    POUND           reduce using rule 5 (external-declaration -> array_usage SEMICOLON .)
    $end            reduce using rule 5 (external-declaration -> array_usage SEMICOLON .)


state 27

    (82) macro_definition -> POUND DEFINE . ID assignment

    ID              shift and go to state 54


state 28

    (83) file_inclusion -> POUND INCLUDE . LESS HEADER GREATER
    (84) file_inclusion -> POUND INCLUDE . QUOTE HEADER QUOTE

    LESS            shift and go to state 55
    QUOTE           shift and go to state 56


state 29

    (45) function -> type ID LPAREN . argument_list_option RPAREN compound_statement
    (46) argument_list_option -> . argument_list
    (47) argument_list_option -> . empty
    (48) argument_list -> . argument_list COMMA argument
    (49) argument_list -> . argument
    (85) empty -> .
    (50) argument -> . type ID
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR
    (61) type -> . VOID

    RPAREN          reduce using rule 85 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13

    type                           shift and go to state 57
    argument_list_option           shift and go to state 58
    argument_list                  shift and go to state 59
    empty                          shift and go to state 60
    argument                       shift and go to state 61

state 30

    (14) assignment -> ID ASSIGN . assignment
    (15) assignment -> ID ASSIGN . function_call
    (16) assignment -> ID ASSIGN . array_usage
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (42) function_call -> . ID LPAREN RPAREN
    (43) function_call -> . ID LPAREN assignment RPAREN
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 62
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 63
    function_call                  shift and go to state 64
    array_usage                    shift and go to state 65

state 31

    (18) assignment -> ID COMMA . assignment
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 66
    array_usage                    shift and go to state 39

state 32

    (20) assignment -> ID PLUS . assignment
    (34) assignment -> ID PLUS . PLUS
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    PLUS            shift and go to state 67
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 68
    array_usage                    shift and go to state 39

state 33

    (21) assignment -> ID MINUS . assignment
    (37) assignment -> ID MINUS . MINUS
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    MINUS           shift and go to state 69
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    LETTER          shift and go to state 24

    assignment                     shift and go to state 70
    array_usage                    shift and go to state 39

state 34

    (22) assignment -> ID TIMES . assignment
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 71
    array_usage                    shift and go to state 39

state 35

    (23) assignment -> ID DIVIDE . assignment
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 72
    array_usage                    shift and go to state 39

state 36

    (24) assignment -> ID MODULUS . assignment
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 73
    array_usage                    shift and go to state 39

state 37

    (31) assignment -> LPAREN assignment . RPAREN

    RPAREN          shift and go to state 74


state 38

    (14) assignment -> ID . ASSIGN assignment
    (15) assignment -> ID . ASSIGN function_call
    (16) assignment -> ID . ASSIGN array_usage
    (18) assignment -> ID . COMMA assignment
    (20) assignment -> ID . PLUS assignment
    (21) assignment -> ID . MINUS assignment
    (22) assignment -> ID . TIMES assignment
    (23) assignment -> ID . DIVIDE assignment
    (24) assignment -> ID . MODULUS assignment
    (34) assignment -> ID . PLUS PLUS
    (37) assignment -> ID . MINUS MINUS
    (40) assignment -> ID .
    (44) array_usage -> ID . LBRACKET assignment RBRACKET

    ASSIGN          shift and go to state 30
    COMMA           shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULUS         shift and go to state 36
    RPAREN          reduce using rule 40 (assignment -> ID .)
    SEMICOLON       reduce using rule 40 (assignment -> ID .)
    APOST           reduce using rule 40 (assignment -> ID .)
    RBRACKET        reduce using rule 40 (assignment -> ID .)
    INT             reduce using rule 40 (assignment -> ID .)
    FLOAT           reduce using rule 40 (assignment -> ID .)
    CHAR            reduce using rule 40 (assignment -> ID .)
    VOID            reduce using rule 40 (assignment -> ID .)
    ID              reduce using rule 40 (assignment -> ID .)
    POUND           reduce using rule 40 (assignment -> ID .)
    $end            reduce using rule 40 (assignment -> ID .)
    EQUALS          reduce using rule 40 (assignment -> ID .)
    LESS            reduce using rule 40 (assignment -> ID .)
    GREATER         reduce using rule 40 (assignment -> ID .)
    AND             reduce using rule 40 (assignment -> ID .)
    OR              reduce using rule 40 (assignment -> ID .)
    LBRACKET        shift and go to state 25


state 39

    (17) assignment -> array_usage . ASSIGN assignment
    (35) assignment -> array_usage . PLUS PLUS
    (38) assignment -> array_usage . MINUS MINUS

    ASSIGN          shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 40

    (4) external-declaration -> type assignment SEMICOLON .

    INT             reduce using rule 4 (external-declaration -> type assignment SEMICOLON .)
    FLOAT           reduce using rule 4 (external-declaration -> type assignment SEMICOLON .)
    CHAR            reduce using rule 4 (external-declaration -> type assignment SEMICOLON .)
    VOID            reduce using rule 4 (external-declaration -> type assignment SEMICOLON .)
    ID              reduce using rule 4 (external-declaration -> type assignment SEMICOLON .)
    POUND           reduce using rule 4 (external-declaration -> type assignment SEMICOLON .)
    $end            reduce using rule 4 (external-declaration -> type assignment SEMICOLON .)


state 41

    (6) external-declaration -> type array_usage SEMICOLON .

    INT             reduce using rule 6 (external-declaration -> type array_usage SEMICOLON .)
    FLOAT           reduce using rule 6 (external-declaration -> type array_usage SEMICOLON .)
    CHAR            reduce using rule 6 (external-declaration -> type array_usage SEMICOLON .)
    VOID            reduce using rule 6 (external-declaration -> type array_usage SEMICOLON .)
    ID              reduce using rule 6 (external-declaration -> type array_usage SEMICOLON .)
    POUND           reduce using rule 6 (external-declaration -> type array_usage SEMICOLON .)
    $end            reduce using rule 6 (external-declaration -> type array_usage SEMICOLON .)


state 42

    (17) assignment -> array_usage ASSIGN . assignment
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    array_usage                    shift and go to state 39
    assignment                     shift and go to state 75

state 43

    (35) assignment -> array_usage PLUS . PLUS

    PLUS            shift and go to state 76


state 44

    (38) assignment -> array_usage MINUS . MINUS

    MINUS           shift and go to state 77


state 45

    (19) assignment -> NUMBER COMMA . assignment
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 78
    array_usage                    shift and go to state 39

state 46

    (25) assignment -> NUMBER PLUS . assignment
    (33) assignment -> NUMBER PLUS . PLUS
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    PLUS            shift and go to state 79
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 80
    array_usage                    shift and go to state 39

state 47

    (26) assignment -> NUMBER MINUS . assignment
    (36) assignment -> NUMBER MINUS . MINUS
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    MINUS           shift and go to state 81
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    LETTER          shift and go to state 24

    assignment                     shift and go to state 82
    array_usage                    shift and go to state 39

state 48

    (27) assignment -> NUMBER TIMES . assignment
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 83
    array_usage                    shift and go to state 39

state 49

    (28) assignment -> NUMBER DIVIDE . assignment
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 84
    array_usage                    shift and go to state 39

state 50

    (29) assignment -> NUMBER MODULUS . assignment
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 85
    array_usage                    shift and go to state 39

state 51

    (32) assignment -> MINUS assignment .

    SEMICOLON       reduce using rule 32 (assignment -> MINUS assignment .)
    RPAREN          reduce using rule 32 (assignment -> MINUS assignment .)
    APOST           reduce using rule 32 (assignment -> MINUS assignment .)
    RBRACKET        reduce using rule 32 (assignment -> MINUS assignment .)
    INT             reduce using rule 32 (assignment -> MINUS assignment .)
    FLOAT           reduce using rule 32 (assignment -> MINUS assignment .)
    CHAR            reduce using rule 32 (assignment -> MINUS assignment .)
    VOID            reduce using rule 32 (assignment -> MINUS assignment .)
    ID              reduce using rule 32 (assignment -> MINUS assignment .)
    POUND           reduce using rule 32 (assignment -> MINUS assignment .)
    $end            reduce using rule 32 (assignment -> MINUS assignment .)
    EQUALS          reduce using rule 32 (assignment -> MINUS assignment .)
    LESS            reduce using rule 32 (assignment -> MINUS assignment .)
    GREATER         reduce using rule 32 (assignment -> MINUS assignment .)
    AND             reduce using rule 32 (assignment -> MINUS assignment .)
    OR              reduce using rule 32 (assignment -> MINUS assignment .)


state 52

    (30) assignment -> APOST assignment . APOST

    APOST           shift and go to state 86


state 53

    (44) array_usage -> ID LBRACKET assignment . RBRACKET

    RBRACKET        shift and go to state 87


state 54

    (82) macro_definition -> POUND DEFINE ID . assignment
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 88
    array_usage                    shift and go to state 39

state 55

    (83) file_inclusion -> POUND INCLUDE LESS . HEADER GREATER

    HEADER          shift and go to state 89


state 56

    (84) file_inclusion -> POUND INCLUDE QUOTE . HEADER QUOTE

    HEADER          shift and go to state 90


state 57

    (50) argument -> type . ID

    ID              shift and go to state 91


state 58

    (45) function -> type ID LPAREN argument_list_option . RPAREN compound_statement

    RPAREN          shift and go to state 92


state 59

    (46) argument_list_option -> argument_list .
    (48) argument_list -> argument_list . COMMA argument

    RPAREN          reduce using rule 46 (argument_list_option -> argument_list .)
    COMMA           shift and go to state 93


state 60

    (47) argument_list_option -> empty .

    RPAREN          reduce using rule 47 (argument_list_option -> empty .)


state 61

    (49) argument_list -> argument .

    COMMA           reduce using rule 49 (argument_list -> argument .)
    RPAREN          reduce using rule 49 (argument_list -> argument .)


state 62

    (14) assignment -> ID . ASSIGN assignment
    (15) assignment -> ID . ASSIGN function_call
    (16) assignment -> ID . ASSIGN array_usage
    (18) assignment -> ID . COMMA assignment
    (20) assignment -> ID . PLUS assignment
    (21) assignment -> ID . MINUS assignment
    (22) assignment -> ID . TIMES assignment
    (23) assignment -> ID . DIVIDE assignment
    (24) assignment -> ID . MODULUS assignment
    (34) assignment -> ID . PLUS PLUS
    (37) assignment -> ID . MINUS MINUS
    (40) assignment -> ID .
    (42) function_call -> ID . LPAREN RPAREN
    (43) function_call -> ID . LPAREN assignment RPAREN
    (44) array_usage -> ID . LBRACKET assignment RBRACKET

    ASSIGN          shift and go to state 30
    COMMA           shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULUS         shift and go to state 36
    SEMICOLON       reduce using rule 40 (assignment -> ID .)
    RPAREN          reduce using rule 40 (assignment -> ID .)
    APOST           reduce using rule 40 (assignment -> ID .)
    RBRACKET        reduce using rule 40 (assignment -> ID .)
    INT             reduce using rule 40 (assignment -> ID .)
    FLOAT           reduce using rule 40 (assignment -> ID .)
    CHAR            reduce using rule 40 (assignment -> ID .)
    VOID            reduce using rule 40 (assignment -> ID .)
    ID              reduce using rule 40 (assignment -> ID .)
    POUND           reduce using rule 40 (assignment -> ID .)
    $end            reduce using rule 40 (assignment -> ID .)
    EQUALS          reduce using rule 40 (assignment -> ID .)
    LESS            reduce using rule 40 (assignment -> ID .)
    GREATER         reduce using rule 40 (assignment -> ID .)
    AND             reduce using rule 40 (assignment -> ID .)
    OR              reduce using rule 40 (assignment -> ID .)
    LPAREN          shift and go to state 94
    LBRACKET        shift and go to state 25


state 63

    (14) assignment -> ID ASSIGN assignment .

    SEMICOLON       reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    RPAREN          reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    APOST           reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    RBRACKET        reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    INT             reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    FLOAT           reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    CHAR            reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    VOID            reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    ID              reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    POUND           reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    $end            reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    EQUALS          reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    LESS            reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    GREATER         reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    AND             reduce using rule 14 (assignment -> ID ASSIGN assignment .)
    OR              reduce using rule 14 (assignment -> ID ASSIGN assignment .)


state 64

    (15) assignment -> ID ASSIGN function_call .

    SEMICOLON       reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    RPAREN          reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    APOST           reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    RBRACKET        reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    INT             reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    FLOAT           reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    CHAR            reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    VOID            reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    ID              reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    POUND           reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    $end            reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    EQUALS          reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    LESS            reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    GREATER         reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    AND             reduce using rule 15 (assignment -> ID ASSIGN function_call .)
    OR              reduce using rule 15 (assignment -> ID ASSIGN function_call .)


state 65

    (16) assignment -> ID ASSIGN array_usage .
    (17) assignment -> array_usage . ASSIGN assignment
    (35) assignment -> array_usage . PLUS PLUS
    (38) assignment -> array_usage . MINUS MINUS

    SEMICOLON       reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    RPAREN          reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    APOST           reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    RBRACKET        reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    INT             reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    FLOAT           reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    CHAR            reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    VOID            reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    ID              reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    POUND           reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    $end            reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    EQUALS          reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    LESS            reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    GREATER         reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    AND             reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    OR              reduce using rule 16 (assignment -> ID ASSIGN array_usage .)
    ASSIGN          shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 66

    (18) assignment -> ID COMMA assignment .

    SEMICOLON       reduce using rule 18 (assignment -> ID COMMA assignment .)
    RPAREN          reduce using rule 18 (assignment -> ID COMMA assignment .)
    APOST           reduce using rule 18 (assignment -> ID COMMA assignment .)
    RBRACKET        reduce using rule 18 (assignment -> ID COMMA assignment .)
    INT             reduce using rule 18 (assignment -> ID COMMA assignment .)
    FLOAT           reduce using rule 18 (assignment -> ID COMMA assignment .)
    CHAR            reduce using rule 18 (assignment -> ID COMMA assignment .)
    VOID            reduce using rule 18 (assignment -> ID COMMA assignment .)
    ID              reduce using rule 18 (assignment -> ID COMMA assignment .)
    POUND           reduce using rule 18 (assignment -> ID COMMA assignment .)
    $end            reduce using rule 18 (assignment -> ID COMMA assignment .)
    EQUALS          reduce using rule 18 (assignment -> ID COMMA assignment .)
    LESS            reduce using rule 18 (assignment -> ID COMMA assignment .)
    GREATER         reduce using rule 18 (assignment -> ID COMMA assignment .)
    AND             reduce using rule 18 (assignment -> ID COMMA assignment .)
    OR              reduce using rule 18 (assignment -> ID COMMA assignment .)


state 67

    (34) assignment -> ID PLUS PLUS .

    SEMICOLON       reduce using rule 34 (assignment -> ID PLUS PLUS .)
    RPAREN          reduce using rule 34 (assignment -> ID PLUS PLUS .)
    APOST           reduce using rule 34 (assignment -> ID PLUS PLUS .)
    RBRACKET        reduce using rule 34 (assignment -> ID PLUS PLUS .)
    INT             reduce using rule 34 (assignment -> ID PLUS PLUS .)
    FLOAT           reduce using rule 34 (assignment -> ID PLUS PLUS .)
    CHAR            reduce using rule 34 (assignment -> ID PLUS PLUS .)
    VOID            reduce using rule 34 (assignment -> ID PLUS PLUS .)
    ID              reduce using rule 34 (assignment -> ID PLUS PLUS .)
    POUND           reduce using rule 34 (assignment -> ID PLUS PLUS .)
    $end            reduce using rule 34 (assignment -> ID PLUS PLUS .)
    EQUALS          reduce using rule 34 (assignment -> ID PLUS PLUS .)
    LESS            reduce using rule 34 (assignment -> ID PLUS PLUS .)
    GREATER         reduce using rule 34 (assignment -> ID PLUS PLUS .)
    AND             reduce using rule 34 (assignment -> ID PLUS PLUS .)
    OR              reduce using rule 34 (assignment -> ID PLUS PLUS .)


state 68

    (20) assignment -> ID PLUS assignment .

    SEMICOLON       reduce using rule 20 (assignment -> ID PLUS assignment .)
    RPAREN          reduce using rule 20 (assignment -> ID PLUS assignment .)
    APOST           reduce using rule 20 (assignment -> ID PLUS assignment .)
    RBRACKET        reduce using rule 20 (assignment -> ID PLUS assignment .)
    INT             reduce using rule 20 (assignment -> ID PLUS assignment .)
    FLOAT           reduce using rule 20 (assignment -> ID PLUS assignment .)
    CHAR            reduce using rule 20 (assignment -> ID PLUS assignment .)
    VOID            reduce using rule 20 (assignment -> ID PLUS assignment .)
    ID              reduce using rule 20 (assignment -> ID PLUS assignment .)
    POUND           reduce using rule 20 (assignment -> ID PLUS assignment .)
    $end            reduce using rule 20 (assignment -> ID PLUS assignment .)
    EQUALS          reduce using rule 20 (assignment -> ID PLUS assignment .)
    LESS            reduce using rule 20 (assignment -> ID PLUS assignment .)
    GREATER         reduce using rule 20 (assignment -> ID PLUS assignment .)
    AND             reduce using rule 20 (assignment -> ID PLUS assignment .)
    OR              reduce using rule 20 (assignment -> ID PLUS assignment .)


state 69

    (37) assignment -> ID MINUS MINUS .
    (32) assignment -> MINUS . assignment
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    SEMICOLON       reduce using rule 37 (assignment -> ID MINUS MINUS .)
    RPAREN          reduce using rule 37 (assignment -> ID MINUS MINUS .)
    APOST           reduce using rule 37 (assignment -> ID MINUS MINUS .)
    RBRACKET        reduce using rule 37 (assignment -> ID MINUS MINUS .)
    INT             reduce using rule 37 (assignment -> ID MINUS MINUS .)
    FLOAT           reduce using rule 37 (assignment -> ID MINUS MINUS .)
    CHAR            reduce using rule 37 (assignment -> ID MINUS MINUS .)
    VOID            reduce using rule 37 (assignment -> ID MINUS MINUS .)
    ID              reduce using rule 37 (assignment -> ID MINUS MINUS .)
    POUND           reduce using rule 37 (assignment -> ID MINUS MINUS .)
    $end            reduce using rule 37 (assignment -> ID MINUS MINUS .)
    EQUALS          reduce using rule 37 (assignment -> ID MINUS MINUS .)
    LESS            reduce using rule 37 (assignment -> ID MINUS MINUS .)
    GREATER         reduce using rule 37 (assignment -> ID MINUS MINUS .)
    AND             reduce using rule 37 (assignment -> ID MINUS MINUS .)
    OR              reduce using rule 37 (assignment -> ID MINUS MINUS .)
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

  ! ID              [ shift and go to state 38 ]
  ! APOST           [ shift and go to state 23 ]

    assignment                     shift and go to state 51
    array_usage                    shift and go to state 39

state 70

    (21) assignment -> ID MINUS assignment .

    SEMICOLON       reduce using rule 21 (assignment -> ID MINUS assignment .)
    RPAREN          reduce using rule 21 (assignment -> ID MINUS assignment .)
    APOST           reduce using rule 21 (assignment -> ID MINUS assignment .)
    RBRACKET        reduce using rule 21 (assignment -> ID MINUS assignment .)
    INT             reduce using rule 21 (assignment -> ID MINUS assignment .)
    FLOAT           reduce using rule 21 (assignment -> ID MINUS assignment .)
    CHAR            reduce using rule 21 (assignment -> ID MINUS assignment .)
    VOID            reduce using rule 21 (assignment -> ID MINUS assignment .)
    ID              reduce using rule 21 (assignment -> ID MINUS assignment .)
    POUND           reduce using rule 21 (assignment -> ID MINUS assignment .)
    $end            reduce using rule 21 (assignment -> ID MINUS assignment .)
    EQUALS          reduce using rule 21 (assignment -> ID MINUS assignment .)
    LESS            reduce using rule 21 (assignment -> ID MINUS assignment .)
    GREATER         reduce using rule 21 (assignment -> ID MINUS assignment .)
    AND             reduce using rule 21 (assignment -> ID MINUS assignment .)
    OR              reduce using rule 21 (assignment -> ID MINUS assignment .)


state 71

    (22) assignment -> ID TIMES assignment .

    SEMICOLON       reduce using rule 22 (assignment -> ID TIMES assignment .)
    RPAREN          reduce using rule 22 (assignment -> ID TIMES assignment .)
    APOST           reduce using rule 22 (assignment -> ID TIMES assignment .)
    RBRACKET        reduce using rule 22 (assignment -> ID TIMES assignment .)
    INT             reduce using rule 22 (assignment -> ID TIMES assignment .)
    FLOAT           reduce using rule 22 (assignment -> ID TIMES assignment .)
    CHAR            reduce using rule 22 (assignment -> ID TIMES assignment .)
    VOID            reduce using rule 22 (assignment -> ID TIMES assignment .)
    ID              reduce using rule 22 (assignment -> ID TIMES assignment .)
    POUND           reduce using rule 22 (assignment -> ID TIMES assignment .)
    $end            reduce using rule 22 (assignment -> ID TIMES assignment .)
    EQUALS          reduce using rule 22 (assignment -> ID TIMES assignment .)
    LESS            reduce using rule 22 (assignment -> ID TIMES assignment .)
    GREATER         reduce using rule 22 (assignment -> ID TIMES assignment .)
    AND             reduce using rule 22 (assignment -> ID TIMES assignment .)
    OR              reduce using rule 22 (assignment -> ID TIMES assignment .)


state 72

    (23) assignment -> ID DIVIDE assignment .

    SEMICOLON       reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    RPAREN          reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    APOST           reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    RBRACKET        reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    INT             reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    FLOAT           reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    CHAR            reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    VOID            reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    ID              reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    POUND           reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    $end            reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    EQUALS          reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    LESS            reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    GREATER         reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    AND             reduce using rule 23 (assignment -> ID DIVIDE assignment .)
    OR              reduce using rule 23 (assignment -> ID DIVIDE assignment .)


state 73

    (24) assignment -> ID MODULUS assignment .

    SEMICOLON       reduce using rule 24 (assignment -> ID MODULUS assignment .)
    RPAREN          reduce using rule 24 (assignment -> ID MODULUS assignment .)
    APOST           reduce using rule 24 (assignment -> ID MODULUS assignment .)
    RBRACKET        reduce using rule 24 (assignment -> ID MODULUS assignment .)
    INT             reduce using rule 24 (assignment -> ID MODULUS assignment .)
    FLOAT           reduce using rule 24 (assignment -> ID MODULUS assignment .)
    CHAR            reduce using rule 24 (assignment -> ID MODULUS assignment .)
    VOID            reduce using rule 24 (assignment -> ID MODULUS assignment .)
    ID              reduce using rule 24 (assignment -> ID MODULUS assignment .)
    POUND           reduce using rule 24 (assignment -> ID MODULUS assignment .)
    $end            reduce using rule 24 (assignment -> ID MODULUS assignment .)
    EQUALS          reduce using rule 24 (assignment -> ID MODULUS assignment .)
    LESS            reduce using rule 24 (assignment -> ID MODULUS assignment .)
    GREATER         reduce using rule 24 (assignment -> ID MODULUS assignment .)
    AND             reduce using rule 24 (assignment -> ID MODULUS assignment .)
    OR              reduce using rule 24 (assignment -> ID MODULUS assignment .)


state 74

    (31) assignment -> LPAREN assignment RPAREN .

    SEMICOLON       reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    RPAREN          reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    APOST           reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    RBRACKET        reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    INT             reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    FLOAT           reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    CHAR            reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    VOID            reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    ID              reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    POUND           reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    $end            reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    EQUALS          reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    LESS            reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    GREATER         reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    AND             reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    OR              reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)


state 75

    (17) assignment -> array_usage ASSIGN assignment .

    SEMICOLON       reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    RPAREN          reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    APOST           reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    RBRACKET        reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    INT             reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    FLOAT           reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    CHAR            reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    VOID            reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    ID              reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    POUND           reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    $end            reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    EQUALS          reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    LESS            reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    GREATER         reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    AND             reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    OR              reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)


state 76

    (35) assignment -> array_usage PLUS PLUS .

    SEMICOLON       reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    RPAREN          reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    APOST           reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    RBRACKET        reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    INT             reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    FLOAT           reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    CHAR            reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    VOID            reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    ID              reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    POUND           reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    $end            reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    EQUALS          reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    LESS            reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    GREATER         reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    AND             reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    OR              reduce using rule 35 (assignment -> array_usage PLUS PLUS .)


state 77

    (38) assignment -> array_usage MINUS MINUS .

    SEMICOLON       reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    RPAREN          reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    APOST           reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    RBRACKET        reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    INT             reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    FLOAT           reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    CHAR            reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    VOID            reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    ID              reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    POUND           reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    $end            reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    EQUALS          reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    LESS            reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    GREATER         reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    AND             reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    OR              reduce using rule 38 (assignment -> array_usage MINUS MINUS .)


state 78

    (19) assignment -> NUMBER COMMA assignment .

    SEMICOLON       reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    RPAREN          reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    APOST           reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    RBRACKET        reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    INT             reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    FLOAT           reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    CHAR            reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    VOID            reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    ID              reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    POUND           reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    $end            reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    EQUALS          reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    LESS            reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    GREATER         reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    AND             reduce using rule 19 (assignment -> NUMBER COMMA assignment .)
    OR              reduce using rule 19 (assignment -> NUMBER COMMA assignment .)


state 79

    (33) assignment -> NUMBER PLUS PLUS .

    SEMICOLON       reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    RPAREN          reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    APOST           reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    RBRACKET        reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    INT             reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    FLOAT           reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    CHAR            reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    VOID            reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    ID              reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    POUND           reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    $end            reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    EQUALS          reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    LESS            reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    GREATER         reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    AND             reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)
    OR              reduce using rule 33 (assignment -> NUMBER PLUS PLUS .)


state 80

    (25) assignment -> NUMBER PLUS assignment .

    SEMICOLON       reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    RPAREN          reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    APOST           reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    RBRACKET        reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    INT             reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    FLOAT           reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    CHAR            reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    VOID            reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    ID              reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    POUND           reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    $end            reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    EQUALS          reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    LESS            reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    GREATER         reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    AND             reduce using rule 25 (assignment -> NUMBER PLUS assignment .)
    OR              reduce using rule 25 (assignment -> NUMBER PLUS assignment .)


state 81

    (36) assignment -> NUMBER MINUS MINUS .
    (32) assignment -> MINUS . assignment
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    SEMICOLON       reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    RPAREN          reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    APOST           reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    RBRACKET        reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    INT             reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    FLOAT           reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    CHAR            reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    VOID            reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    ID              reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    POUND           reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    $end            reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    EQUALS          reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    LESS            reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    GREATER         reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    AND             reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    OR              reduce using rule 36 (assignment -> NUMBER MINUS MINUS .)
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

  ! ID              [ shift and go to state 38 ]
  ! APOST           [ shift and go to state 23 ]

    assignment                     shift and go to state 51
    array_usage                    shift and go to state 39

state 82

    (26) assignment -> NUMBER MINUS assignment .

    SEMICOLON       reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    RPAREN          reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    APOST           reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    RBRACKET        reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    INT             reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    FLOAT           reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    CHAR            reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    VOID            reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    ID              reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    POUND           reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    $end            reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    EQUALS          reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    LESS            reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    GREATER         reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    AND             reduce using rule 26 (assignment -> NUMBER MINUS assignment .)
    OR              reduce using rule 26 (assignment -> NUMBER MINUS assignment .)


state 83

    (27) assignment -> NUMBER TIMES assignment .

    SEMICOLON       reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    RPAREN          reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    APOST           reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    RBRACKET        reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    INT             reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    FLOAT           reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    CHAR            reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    VOID            reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    ID              reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    POUND           reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    $end            reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    EQUALS          reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    LESS            reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    GREATER         reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    AND             reduce using rule 27 (assignment -> NUMBER TIMES assignment .)
    OR              reduce using rule 27 (assignment -> NUMBER TIMES assignment .)


state 84

    (28) assignment -> NUMBER DIVIDE assignment .

    SEMICOLON       reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    RPAREN          reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    APOST           reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    RBRACKET        reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    INT             reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    FLOAT           reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    CHAR            reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    VOID            reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    ID              reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    POUND           reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    $end            reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    EQUALS          reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    LESS            reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    GREATER         reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    AND             reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)
    OR              reduce using rule 28 (assignment -> NUMBER DIVIDE assignment .)


state 85

    (29) assignment -> NUMBER MODULUS assignment .

    SEMICOLON       reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    RPAREN          reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    APOST           reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    RBRACKET        reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    INT             reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    FLOAT           reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    CHAR            reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    VOID            reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    ID              reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    POUND           reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    $end            reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    EQUALS          reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    LESS            reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    GREATER         reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    AND             reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)
    OR              reduce using rule 29 (assignment -> NUMBER MODULUS assignment .)


state 86

    (30) assignment -> APOST assignment APOST .

    SEMICOLON       reduce using rule 30 (assignment -> APOST assignment APOST .)
    RPAREN          reduce using rule 30 (assignment -> APOST assignment APOST .)
    APOST           reduce using rule 30 (assignment -> APOST assignment APOST .)
    RBRACKET        reduce using rule 30 (assignment -> APOST assignment APOST .)
    INT             reduce using rule 30 (assignment -> APOST assignment APOST .)
    FLOAT           reduce using rule 30 (assignment -> APOST assignment APOST .)
    CHAR            reduce using rule 30 (assignment -> APOST assignment APOST .)
    VOID            reduce using rule 30 (assignment -> APOST assignment APOST .)
    ID              reduce using rule 30 (assignment -> APOST assignment APOST .)
    POUND           reduce using rule 30 (assignment -> APOST assignment APOST .)
    $end            reduce using rule 30 (assignment -> APOST assignment APOST .)
    EQUALS          reduce using rule 30 (assignment -> APOST assignment APOST .)
    LESS            reduce using rule 30 (assignment -> APOST assignment APOST .)
    GREATER         reduce using rule 30 (assignment -> APOST assignment APOST .)
    AND             reduce using rule 30 (assignment -> APOST assignment APOST .)
    OR              reduce using rule 30 (assignment -> APOST assignment APOST .)


state 87

    (44) array_usage -> ID LBRACKET assignment RBRACKET .

    SEMICOLON       reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    ASSIGN          reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    PLUS            reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    MINUS           reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    RPAREN          reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    APOST           reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    RBRACKET        reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    INT             reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    FLOAT           reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    CHAR            reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    VOID            reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    ID              reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    POUND           reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    $end            reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    EQUALS          reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    LESS            reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    GREATER         reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    AND             reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)
    OR              reduce using rule 44 (array_usage -> ID LBRACKET assignment RBRACKET .)


state 88

    (82) macro_definition -> POUND DEFINE ID assignment .

    INT             reduce using rule 82 (macro_definition -> POUND DEFINE ID assignment .)
    FLOAT           reduce using rule 82 (macro_definition -> POUND DEFINE ID assignment .)
    CHAR            reduce using rule 82 (macro_definition -> POUND DEFINE ID assignment .)
    VOID            reduce using rule 82 (macro_definition -> POUND DEFINE ID assignment .)
    ID              reduce using rule 82 (macro_definition -> POUND DEFINE ID assignment .)
    POUND           reduce using rule 82 (macro_definition -> POUND DEFINE ID assignment .)
    $end            reduce using rule 82 (macro_definition -> POUND DEFINE ID assignment .)


state 89

    (83) file_inclusion -> POUND INCLUDE LESS HEADER . GREATER

    GREATER         shift and go to state 95


state 90

    (84) file_inclusion -> POUND INCLUDE QUOTE HEADER . QUOTE

    QUOTE           shift and go to state 96


state 91

    (50) argument -> type ID .

    COMMA           reduce using rule 50 (argument -> type ID .)
    RPAREN          reduce using rule 50 (argument -> type ID .)


state 92

    (45) function -> type ID LPAREN argument_list_option RPAREN . compound_statement
    (51) compound_statement -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 98

    compound_statement             shift and go to state 97

state 93

    (48) argument_list -> argument_list COMMA . argument
    (50) argument -> . type ID
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR
    (61) type -> . VOID

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13

    argument                       shift and go to state 99
    type                           shift and go to state 57

state 94

    (42) function_call -> ID LPAREN . RPAREN
    (43) function_call -> ID LPAREN . assignment RPAREN
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    RPAREN          shift and go to state 100
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 101
    array_usage                    shift and go to state 39

state 95

    (83) file_inclusion -> POUND INCLUDE LESS HEADER GREATER .

    INT             reduce using rule 83 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    FLOAT           reduce using rule 83 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    CHAR            reduce using rule 83 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    VOID            reduce using rule 83 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    ID              reduce using rule 83 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    POUND           reduce using rule 83 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    $end            reduce using rule 83 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)


state 96

    (84) file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .

    INT             reduce using rule 84 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    FLOAT           reduce using rule 84 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    CHAR            reduce using rule 84 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    VOID            reduce using rule 84 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    ID              reduce using rule 84 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    POUND           reduce using rule 84 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    $end            reduce using rule 84 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)


state 97

    (45) function -> type ID LPAREN argument_list_option RPAREN compound_statement .

    INT             reduce using rule 45 (function -> type ID LPAREN argument_list_option RPAREN compound_statement .)
    FLOAT           reduce using rule 45 (function -> type ID LPAREN argument_list_option RPAREN compound_statement .)
    CHAR            reduce using rule 45 (function -> type ID LPAREN argument_list_option RPAREN compound_statement .)
    VOID            reduce using rule 45 (function -> type ID LPAREN argument_list_option RPAREN compound_statement .)
    ID              reduce using rule 45 (function -> type ID LPAREN argument_list_option RPAREN compound_statement .)
    POUND           reduce using rule 45 (function -> type ID LPAREN argument_list_option RPAREN compound_statement .)
    $end            reduce using rule 45 (function -> type ID LPAREN argument_list_option RPAREN compound_statement .)


state 98

    (51) compound_statement -> LBRACE . statement_list RBRACE
    (52) statement_list -> . statement_list statement
    (53) statement_list -> . empty
    (85) empty -> .

    RBRACE          reduce using rule 85 (empty -> .)
    WHILE           reduce using rule 85 (empty -> .)
    DO              reduce using rule 85 (empty -> .)
    IF              reduce using rule 85 (empty -> .)
    RETURN          reduce using rule 85 (empty -> .)
    INT             reduce using rule 85 (empty -> .)
    FLOAT           reduce using rule 85 (empty -> .)
    CHAR            reduce using rule 85 (empty -> .)
    VOID            reduce using rule 85 (empty -> .)
    ID              reduce using rule 85 (empty -> .)
    NUMBER          reduce using rule 85 (empty -> .)
    APOST           reduce using rule 85 (empty -> .)
    LPAREN          reduce using rule 85 (empty -> .)
    MINUS           reduce using rule 85 (empty -> .)
    LETTER          reduce using rule 85 (empty -> .)

    statement_list                 shift and go to state 102
    empty                          shift and go to state 103

state 99

    (48) argument_list -> argument_list COMMA argument .

    COMMA           reduce using rule 48 (argument_list -> argument_list COMMA argument .)
    RPAREN          reduce using rule 48 (argument_list -> argument_list COMMA argument .)


state 100

    (42) function_call -> ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    APOST           reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    INT             reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    FLOAT           reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    CHAR            reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    VOID            reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    ID              reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    POUND           reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    $end            reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    EQUALS          reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    LESS            reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    GREATER         reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    AND             reduce using rule 42 (function_call -> ID LPAREN RPAREN .)
    OR              reduce using rule 42 (function_call -> ID LPAREN RPAREN .)


state 101

    (43) function_call -> ID LPAREN assignment . RPAREN

    RPAREN          shift and go to state 104


state 102

    (51) compound_statement -> LBRACE statement_list . RBRACE
    (52) statement_list -> statement_list . statement
    (54) statement -> . iteration_statement
    (55) statement -> . declaration
    (56) statement -> . selection_statement
    (57) statement -> . return-statement
    (62) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (63) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (64) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (65) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (9) declaration -> . type assignment SEMICOLON
    (10) declaration -> . assignment SEMICOLON
    (11) declaration -> . function_call SEMICOLON
    (12) declaration -> . array_usage SEMICOLON
    (13) declaration -> . type array_usage SEMICOLON
    (66) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (67) selection_statement -> . IF LPAREN expression RPAREN statement
    (68) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (69) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (70) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (71) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (72) return-statement -> . RETURN SEMICOLON
    (73) return-statement -> . RETURN expression SEMICOLON
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR
    (61) type -> . VOID
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (42) function_call -> . ID LPAREN RPAREN
    (43) function_call -> . ID LPAREN assignment RPAREN
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    RBRACE          shift and go to state 105
    WHILE           shift and go to state 111
    DO              shift and go to state 112
    IF              shift and go to state 117
    RETURN          shift and go to state 118
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    ID              shift and go to state 62
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    statement                      shift and go to state 106
    iteration_statement            shift and go to state 107
    declaration                    shift and go to state 108
    selection_statement            shift and go to state 109
    return-statement               shift and go to state 110
    type                           shift and go to state 113
    assignment                     shift and go to state 114
    function_call                  shift and go to state 115
    array_usage                    shift and go to state 116

state 103

    (53) statement_list -> empty .

    RBRACE          reduce using rule 53 (statement_list -> empty .)
    WHILE           reduce using rule 53 (statement_list -> empty .)
    DO              reduce using rule 53 (statement_list -> empty .)
    IF              reduce using rule 53 (statement_list -> empty .)
    RETURN          reduce using rule 53 (statement_list -> empty .)
    INT             reduce using rule 53 (statement_list -> empty .)
    FLOAT           reduce using rule 53 (statement_list -> empty .)
    CHAR            reduce using rule 53 (statement_list -> empty .)
    VOID            reduce using rule 53 (statement_list -> empty .)
    ID              reduce using rule 53 (statement_list -> empty .)
    NUMBER          reduce using rule 53 (statement_list -> empty .)
    APOST           reduce using rule 53 (statement_list -> empty .)
    LPAREN          reduce using rule 53 (statement_list -> empty .)
    MINUS           reduce using rule 53 (statement_list -> empty .)
    LETTER          reduce using rule 53 (statement_list -> empty .)


state 104

    (43) function_call -> ID LPAREN assignment RPAREN .

    SEMICOLON       reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    RPAREN          reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    APOST           reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    RBRACKET        reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    INT             reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    FLOAT           reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    CHAR            reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    VOID            reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    ID              reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    POUND           reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    $end            reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    EQUALS          reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    LESS            reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    GREATER         reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    AND             reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)
    OR              reduce using rule 43 (function_call -> ID LPAREN assignment RPAREN .)


state 105

    (51) compound_statement -> LBRACE statement_list RBRACE .

    INT             reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    VOID            reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    POUND           reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    DO              reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    APOST           reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    MINUS           reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    LETTER          reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 51 (compound_statement -> LBRACE statement_list RBRACE .)


state 106

    (52) statement_list -> statement_list statement .

    RBRACE          reduce using rule 52 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 52 (statement_list -> statement_list statement .)
    DO              reduce using rule 52 (statement_list -> statement_list statement .)
    IF              reduce using rule 52 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 52 (statement_list -> statement_list statement .)
    INT             reduce using rule 52 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 52 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 52 (statement_list -> statement_list statement .)
    VOID            reduce using rule 52 (statement_list -> statement_list statement .)
    ID              reduce using rule 52 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 52 (statement_list -> statement_list statement .)
    APOST           reduce using rule 52 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 52 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 52 (statement_list -> statement_list statement .)
    LETTER          reduce using rule 52 (statement_list -> statement_list statement .)


state 107

    (54) statement -> iteration_statement .

    RBRACE          reduce using rule 54 (statement -> iteration_statement .)
    WHILE           reduce using rule 54 (statement -> iteration_statement .)
    DO              reduce using rule 54 (statement -> iteration_statement .)
    IF              reduce using rule 54 (statement -> iteration_statement .)
    RETURN          reduce using rule 54 (statement -> iteration_statement .)
    INT             reduce using rule 54 (statement -> iteration_statement .)
    FLOAT           reduce using rule 54 (statement -> iteration_statement .)
    CHAR            reduce using rule 54 (statement -> iteration_statement .)
    VOID            reduce using rule 54 (statement -> iteration_statement .)
    ID              reduce using rule 54 (statement -> iteration_statement .)
    NUMBER          reduce using rule 54 (statement -> iteration_statement .)
    APOST           reduce using rule 54 (statement -> iteration_statement .)
    LPAREN          reduce using rule 54 (statement -> iteration_statement .)
    MINUS           reduce using rule 54 (statement -> iteration_statement .)
    LETTER          reduce using rule 54 (statement -> iteration_statement .)
    ELSE            reduce using rule 54 (statement -> iteration_statement .)


state 108

    (55) statement -> declaration .

    RBRACE          reduce using rule 55 (statement -> declaration .)
    WHILE           reduce using rule 55 (statement -> declaration .)
    DO              reduce using rule 55 (statement -> declaration .)
    IF              reduce using rule 55 (statement -> declaration .)
    RETURN          reduce using rule 55 (statement -> declaration .)
    INT             reduce using rule 55 (statement -> declaration .)
    FLOAT           reduce using rule 55 (statement -> declaration .)
    CHAR            reduce using rule 55 (statement -> declaration .)
    VOID            reduce using rule 55 (statement -> declaration .)
    ID              reduce using rule 55 (statement -> declaration .)
    NUMBER          reduce using rule 55 (statement -> declaration .)
    APOST           reduce using rule 55 (statement -> declaration .)
    LPAREN          reduce using rule 55 (statement -> declaration .)
    MINUS           reduce using rule 55 (statement -> declaration .)
    LETTER          reduce using rule 55 (statement -> declaration .)
    ELSE            reduce using rule 55 (statement -> declaration .)


state 109

    (56) statement -> selection_statement .

    RBRACE          reduce using rule 56 (statement -> selection_statement .)
    WHILE           reduce using rule 56 (statement -> selection_statement .)
    DO              reduce using rule 56 (statement -> selection_statement .)
    IF              reduce using rule 56 (statement -> selection_statement .)
    RETURN          reduce using rule 56 (statement -> selection_statement .)
    INT             reduce using rule 56 (statement -> selection_statement .)
    FLOAT           reduce using rule 56 (statement -> selection_statement .)
    CHAR            reduce using rule 56 (statement -> selection_statement .)
    VOID            reduce using rule 56 (statement -> selection_statement .)
    ID              reduce using rule 56 (statement -> selection_statement .)
    NUMBER          reduce using rule 56 (statement -> selection_statement .)
    APOST           reduce using rule 56 (statement -> selection_statement .)
    LPAREN          reduce using rule 56 (statement -> selection_statement .)
    MINUS           reduce using rule 56 (statement -> selection_statement .)
    LETTER          reduce using rule 56 (statement -> selection_statement .)
    ELSE            reduce using rule 56 (statement -> selection_statement .)


state 110

    (57) statement -> return-statement .

    RBRACE          reduce using rule 57 (statement -> return-statement .)
    WHILE           reduce using rule 57 (statement -> return-statement .)
    DO              reduce using rule 57 (statement -> return-statement .)
    IF              reduce using rule 57 (statement -> return-statement .)
    RETURN          reduce using rule 57 (statement -> return-statement .)
    INT             reduce using rule 57 (statement -> return-statement .)
    FLOAT           reduce using rule 57 (statement -> return-statement .)
    CHAR            reduce using rule 57 (statement -> return-statement .)
    VOID            reduce using rule 57 (statement -> return-statement .)
    ID              reduce using rule 57 (statement -> return-statement .)
    NUMBER          reduce using rule 57 (statement -> return-statement .)
    APOST           reduce using rule 57 (statement -> return-statement .)
    LPAREN          reduce using rule 57 (statement -> return-statement .)
    MINUS           reduce using rule 57 (statement -> return-statement .)
    LETTER          reduce using rule 57 (statement -> return-statement .)
    ELSE            reduce using rule 57 (statement -> return-statement .)


state 111

    (62) iteration_statement -> WHILE . LPAREN expression RPAREN compound_statement
    (63) iteration_statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 119


state 112

    (64) iteration_statement -> DO . compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (65) iteration_statement -> DO . statement WHILE LPAREN expression RPAREN SEMICOLON
    (51) compound_statement -> . LBRACE statement_list RBRACE
    (54) statement -> . iteration_statement
    (55) statement -> . declaration
    (56) statement -> . selection_statement
    (57) statement -> . return-statement
    (62) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (63) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (64) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (65) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (9) declaration -> . type assignment SEMICOLON
    (10) declaration -> . assignment SEMICOLON
    (11) declaration -> . function_call SEMICOLON
    (12) declaration -> . array_usage SEMICOLON
    (13) declaration -> . type array_usage SEMICOLON
    (66) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (67) selection_statement -> . IF LPAREN expression RPAREN statement
    (68) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (69) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (70) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (71) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (72) return-statement -> . RETURN SEMICOLON
    (73) return-statement -> . RETURN expression SEMICOLON
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR
    (61) type -> . VOID
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (42) function_call -> . ID LPAREN RPAREN
    (43) function_call -> . ID LPAREN assignment RPAREN
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    LBRACE          shift and go to state 98
    WHILE           shift and go to state 111
    DO              shift and go to state 112
    IF              shift and go to state 117
    RETURN          shift and go to state 118
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    ID              shift and go to state 62
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    compound_statement             shift and go to state 120
    statement                      shift and go to state 121
    iteration_statement            shift and go to state 107
    declaration                    shift and go to state 108
    selection_statement            shift and go to state 109
    return-statement               shift and go to state 110
    type                           shift and go to state 113
    assignment                     shift and go to state 114
    function_call                  shift and go to state 115
    array_usage                    shift and go to state 116

state 113

    (9) declaration -> type . assignment SEMICOLON
    (13) declaration -> type . array_usage SEMICOLON
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    assignment                     shift and go to state 122
    array_usage                    shift and go to state 123

state 114

    (10) declaration -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 124


state 115

    (11) declaration -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 125


state 116

    (12) declaration -> array_usage . SEMICOLON
    (17) assignment -> array_usage . ASSIGN assignment
    (35) assignment -> array_usage . PLUS PLUS
    (38) assignment -> array_usage . MINUS MINUS

    SEMICOLON       shift and go to state 126
    ASSIGN          shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 117

    (66) selection_statement -> IF . LPAREN expression RPAREN compound_statement
    (67) selection_statement -> IF . LPAREN expression RPAREN statement
    (68) selection_statement -> IF . LPAREN expression RPAREN compound_statement ELSE compound_statement
    (69) selection_statement -> IF . LPAREN expression RPAREN compound_statement ELSE statement
    (70) selection_statement -> IF . LPAREN expression RPAREN statement ELSE compound_statement
    (71) selection_statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 127


state 118

    (72) return-statement -> RETURN . SEMICOLON
    (73) return-statement -> RETURN . expression SEMICOLON
    (74) expression -> . expression EQUALS expression
    (75) expression -> . expression LESS expression
    (76) expression -> . expression GREATER expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . NOT expression
    (80) expression -> . assignment
    (81) expression -> . array_usage
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    SEMICOLON       shift and go to state 128
    NOT             shift and go to state 130
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    expression                     shift and go to state 129
    assignment                     shift and go to state 131
    array_usage                    shift and go to state 132

state 119

    (62) iteration_statement -> WHILE LPAREN . expression RPAREN compound_statement
    (63) iteration_statement -> WHILE LPAREN . expression RPAREN statement
    (74) expression -> . expression EQUALS expression
    (75) expression -> . expression LESS expression
    (76) expression -> . expression GREATER expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . NOT expression
    (80) expression -> . assignment
    (81) expression -> . array_usage
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    NOT             shift and go to state 130
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    expression                     shift and go to state 133
    assignment                     shift and go to state 131
    array_usage                    shift and go to state 132

state 120

    (64) iteration_statement -> DO compound_statement . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 134


state 121

    (65) iteration_statement -> DO statement . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 135


state 122

    (9) declaration -> type assignment . SEMICOLON

    SEMICOLON       shift and go to state 136


state 123

    (13) declaration -> type array_usage . SEMICOLON
    (17) assignment -> array_usage . ASSIGN assignment
    (35) assignment -> array_usage . PLUS PLUS
    (38) assignment -> array_usage . MINUS MINUS

    SEMICOLON       shift and go to state 137
    ASSIGN          shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 124

    (10) declaration -> assignment SEMICOLON .

    RBRACE          reduce using rule 10 (declaration -> assignment SEMICOLON .)
    WHILE           reduce using rule 10 (declaration -> assignment SEMICOLON .)
    DO              reduce using rule 10 (declaration -> assignment SEMICOLON .)
    IF              reduce using rule 10 (declaration -> assignment SEMICOLON .)
    RETURN          reduce using rule 10 (declaration -> assignment SEMICOLON .)
    INT             reduce using rule 10 (declaration -> assignment SEMICOLON .)
    FLOAT           reduce using rule 10 (declaration -> assignment SEMICOLON .)
    CHAR            reduce using rule 10 (declaration -> assignment SEMICOLON .)
    VOID            reduce using rule 10 (declaration -> assignment SEMICOLON .)
    ID              reduce using rule 10 (declaration -> assignment SEMICOLON .)
    NUMBER          reduce using rule 10 (declaration -> assignment SEMICOLON .)
    APOST           reduce using rule 10 (declaration -> assignment SEMICOLON .)
    LPAREN          reduce using rule 10 (declaration -> assignment SEMICOLON .)
    MINUS           reduce using rule 10 (declaration -> assignment SEMICOLON .)
    LETTER          reduce using rule 10 (declaration -> assignment SEMICOLON .)
    ELSE            reduce using rule 10 (declaration -> assignment SEMICOLON .)


state 125

    (11) declaration -> function_call SEMICOLON .

    RBRACE          reduce using rule 11 (declaration -> function_call SEMICOLON .)
    WHILE           reduce using rule 11 (declaration -> function_call SEMICOLON .)
    DO              reduce using rule 11 (declaration -> function_call SEMICOLON .)
    IF              reduce using rule 11 (declaration -> function_call SEMICOLON .)
    RETURN          reduce using rule 11 (declaration -> function_call SEMICOLON .)
    INT             reduce using rule 11 (declaration -> function_call SEMICOLON .)
    FLOAT           reduce using rule 11 (declaration -> function_call SEMICOLON .)
    CHAR            reduce using rule 11 (declaration -> function_call SEMICOLON .)
    VOID            reduce using rule 11 (declaration -> function_call SEMICOLON .)
    ID              reduce using rule 11 (declaration -> function_call SEMICOLON .)
    NUMBER          reduce using rule 11 (declaration -> function_call SEMICOLON .)
    APOST           reduce using rule 11 (declaration -> function_call SEMICOLON .)
    LPAREN          reduce using rule 11 (declaration -> function_call SEMICOLON .)
    MINUS           reduce using rule 11 (declaration -> function_call SEMICOLON .)
    LETTER          reduce using rule 11 (declaration -> function_call SEMICOLON .)
    ELSE            reduce using rule 11 (declaration -> function_call SEMICOLON .)


state 126

    (12) declaration -> array_usage SEMICOLON .

    RBRACE          reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    WHILE           reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    DO              reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    IF              reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    RETURN          reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    INT             reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    FLOAT           reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    CHAR            reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    VOID            reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    ID              reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    NUMBER          reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    APOST           reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    LPAREN          reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    MINUS           reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    LETTER          reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    ELSE            reduce using rule 12 (declaration -> array_usage SEMICOLON .)


state 127

    (66) selection_statement -> IF LPAREN . expression RPAREN compound_statement
    (67) selection_statement -> IF LPAREN . expression RPAREN statement
    (68) selection_statement -> IF LPAREN . expression RPAREN compound_statement ELSE compound_statement
    (69) selection_statement -> IF LPAREN . expression RPAREN compound_statement ELSE statement
    (70) selection_statement -> IF LPAREN . expression RPAREN statement ELSE compound_statement
    (71) selection_statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (74) expression -> . expression EQUALS expression
    (75) expression -> . expression LESS expression
    (76) expression -> . expression GREATER expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . NOT expression
    (80) expression -> . assignment
    (81) expression -> . array_usage
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    NOT             shift and go to state 130
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    expression                     shift and go to state 138
    assignment                     shift and go to state 131
    array_usage                    shift and go to state 132

state 128

    (72) return-statement -> RETURN SEMICOLON .

    RBRACE          reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    DO              reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    IF              reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    INT             reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    CHAR            reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    VOID            reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    ID              reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    APOST           reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    MINUS           reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    LETTER          reduce using rule 72 (return-statement -> RETURN SEMICOLON .)
    ELSE            reduce using rule 72 (return-statement -> RETURN SEMICOLON .)


state 129

    (73) return-statement -> RETURN expression . SEMICOLON
    (74) expression -> expression . EQUALS expression
    (75) expression -> expression . LESS expression
    (76) expression -> expression . GREATER expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression

    SEMICOLON       shift and go to state 139
    EQUALS          shift and go to state 140
    LESS            shift and go to state 141
    GREATER         shift and go to state 142
    AND             shift and go to state 143
    OR              shift and go to state 144


state 130

    (79) expression -> NOT . expression
    (74) expression -> . expression EQUALS expression
    (75) expression -> . expression LESS expression
    (76) expression -> . expression GREATER expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . NOT expression
    (80) expression -> . assignment
    (81) expression -> . array_usage
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    NOT             shift and go to state 130
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    expression                     shift and go to state 145
    assignment                     shift and go to state 131
    array_usage                    shift and go to state 132

state 131

    (80) expression -> assignment .

    SEMICOLON       reduce using rule 80 (expression -> assignment .)
    EQUALS          reduce using rule 80 (expression -> assignment .)
    LESS            reduce using rule 80 (expression -> assignment .)
    GREATER         reduce using rule 80 (expression -> assignment .)
    AND             reduce using rule 80 (expression -> assignment .)
    OR              reduce using rule 80 (expression -> assignment .)
    RPAREN          reduce using rule 80 (expression -> assignment .)


state 132

    (81) expression -> array_usage .
    (17) assignment -> array_usage . ASSIGN assignment
    (35) assignment -> array_usage . PLUS PLUS
    (38) assignment -> array_usage . MINUS MINUS

    SEMICOLON       reduce using rule 81 (expression -> array_usage .)
    EQUALS          reduce using rule 81 (expression -> array_usage .)
    LESS            reduce using rule 81 (expression -> array_usage .)
    GREATER         reduce using rule 81 (expression -> array_usage .)
    AND             reduce using rule 81 (expression -> array_usage .)
    OR              reduce using rule 81 (expression -> array_usage .)
    RPAREN          reduce using rule 81 (expression -> array_usage .)
    ASSIGN          shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 133

    (62) iteration_statement -> WHILE LPAREN expression . RPAREN compound_statement
    (63) iteration_statement -> WHILE LPAREN expression . RPAREN statement
    (74) expression -> expression . EQUALS expression
    (75) expression -> expression . LESS expression
    (76) expression -> expression . GREATER expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression

    RPAREN          shift and go to state 146
    EQUALS          shift and go to state 140
    LESS            shift and go to state 141
    GREATER         shift and go to state 142
    AND             shift and go to state 143
    OR              shift and go to state 144


state 134

    (64) iteration_statement -> DO compound_statement WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 147


state 135

    (65) iteration_statement -> DO statement WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 148


state 136

    (9) declaration -> type assignment SEMICOLON .

    RBRACE          reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    WHILE           reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    DO              reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    IF              reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    RETURN          reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    INT             reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    FLOAT           reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    CHAR            reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    VOID            reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    ID              reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    NUMBER          reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    APOST           reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    LPAREN          reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    MINUS           reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    LETTER          reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    ELSE            reduce using rule 9 (declaration -> type assignment SEMICOLON .)


state 137

    (13) declaration -> type array_usage SEMICOLON .

    RBRACE          reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    WHILE           reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    DO              reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    IF              reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    RETURN          reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    INT             reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    FLOAT           reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    CHAR            reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    VOID            reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    ID              reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    NUMBER          reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    APOST           reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    LPAREN          reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    MINUS           reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    LETTER          reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    ELSE            reduce using rule 13 (declaration -> type array_usage SEMICOLON .)


state 138

    (66) selection_statement -> IF LPAREN expression . RPAREN compound_statement
    (67) selection_statement -> IF LPAREN expression . RPAREN statement
    (68) selection_statement -> IF LPAREN expression . RPAREN compound_statement ELSE compound_statement
    (69) selection_statement -> IF LPAREN expression . RPAREN compound_statement ELSE statement
    (70) selection_statement -> IF LPAREN expression . RPAREN statement ELSE compound_statement
    (71) selection_statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (74) expression -> expression . EQUALS expression
    (75) expression -> expression . LESS expression
    (76) expression -> expression . GREATER expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression

    RPAREN          shift and go to state 149
    EQUALS          shift and go to state 140
    LESS            shift and go to state 141
    GREATER         shift and go to state 142
    AND             shift and go to state 143
    OR              shift and go to state 144


state 139

    (73) return-statement -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    DO              reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    CHAR            reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    VOID            reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    APOST           reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    MINUS           reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    LETTER          reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 73 (return-statement -> RETURN expression SEMICOLON .)


state 140

    (74) expression -> expression EQUALS . expression
    (74) expression -> . expression EQUALS expression
    (75) expression -> . expression LESS expression
    (76) expression -> . expression GREATER expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . NOT expression
    (80) expression -> . assignment
    (81) expression -> . array_usage
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    NOT             shift and go to state 130
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    expression                     shift and go to state 150
    assignment                     shift and go to state 131
    array_usage                    shift and go to state 132

state 141

    (75) expression -> expression LESS . expression
    (74) expression -> . expression EQUALS expression
    (75) expression -> . expression LESS expression
    (76) expression -> . expression GREATER expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . NOT expression
    (80) expression -> . assignment
    (81) expression -> . array_usage
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    NOT             shift and go to state 130
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    expression                     shift and go to state 151
    assignment                     shift and go to state 131
    array_usage                    shift and go to state 132

state 142

    (76) expression -> expression GREATER . expression
    (74) expression -> . expression EQUALS expression
    (75) expression -> . expression LESS expression
    (76) expression -> . expression GREATER expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . NOT expression
    (80) expression -> . assignment
    (81) expression -> . array_usage
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    NOT             shift and go to state 130
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    expression                     shift and go to state 152
    assignment                     shift and go to state 131
    array_usage                    shift and go to state 132

state 143

    (77) expression -> expression AND . expression
    (74) expression -> . expression EQUALS expression
    (75) expression -> . expression LESS expression
    (76) expression -> . expression GREATER expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . NOT expression
    (80) expression -> . assignment
    (81) expression -> . array_usage
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    NOT             shift and go to state 130
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    expression                     shift and go to state 153
    assignment                     shift and go to state 131
    array_usage                    shift and go to state 132

state 144

    (78) expression -> expression OR . expression
    (74) expression -> . expression EQUALS expression
    (75) expression -> . expression LESS expression
    (76) expression -> . expression GREATER expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . NOT expression
    (80) expression -> . assignment
    (81) expression -> . array_usage
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    NOT             shift and go to state 130
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    expression                     shift and go to state 154
    assignment                     shift and go to state 131
    array_usage                    shift and go to state 132

state 145

    (79) expression -> NOT expression .
    (74) expression -> expression . EQUALS expression
    (75) expression -> expression . LESS expression
    (76) expression -> expression . GREATER expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 79 (expression -> NOT expression .)
    RPAREN          reduce using rule 79 (expression -> NOT expression .)
    EQUALS          shift and go to state 140
    LESS            shift and go to state 141
    GREATER         shift and go to state 142
    AND             shift and go to state 143
    OR              shift and go to state 144

  ! EQUALS          [ reduce using rule 79 (expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 79 (expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 79 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 79 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 79 (expression -> NOT expression .) ]


state 146

    (62) iteration_statement -> WHILE LPAREN expression RPAREN . compound_statement
    (63) iteration_statement -> WHILE LPAREN expression RPAREN . statement
    (51) compound_statement -> . LBRACE statement_list RBRACE
    (54) statement -> . iteration_statement
    (55) statement -> . declaration
    (56) statement -> . selection_statement
    (57) statement -> . return-statement
    (62) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (63) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (64) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (65) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (9) declaration -> . type assignment SEMICOLON
    (10) declaration -> . assignment SEMICOLON
    (11) declaration -> . function_call SEMICOLON
    (12) declaration -> . array_usage SEMICOLON
    (13) declaration -> . type array_usage SEMICOLON
    (66) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (67) selection_statement -> . IF LPAREN expression RPAREN statement
    (68) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (69) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (70) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (71) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (72) return-statement -> . RETURN SEMICOLON
    (73) return-statement -> . RETURN expression SEMICOLON
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR
    (61) type -> . VOID
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (42) function_call -> . ID LPAREN RPAREN
    (43) function_call -> . ID LPAREN assignment RPAREN
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    LBRACE          shift and go to state 98
    WHILE           shift and go to state 111
    DO              shift and go to state 112
    IF              shift and go to state 117
    RETURN          shift and go to state 118
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    ID              shift and go to state 62
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    compound_statement             shift and go to state 155
    statement                      shift and go to state 156
    iteration_statement            shift and go to state 107
    declaration                    shift and go to state 108
    selection_statement            shift and go to state 109
    return-statement               shift and go to state 110
    type                           shift and go to state 113
    assignment                     shift and go to state 114
    function_call                  shift and go to state 115
    array_usage                    shift and go to state 116

state 147

    (64) iteration_statement -> DO compound_statement WHILE LPAREN . expression RPAREN SEMICOLON
    (74) expression -> . expression EQUALS expression
    (75) expression -> . expression LESS expression
    (76) expression -> . expression GREATER expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . NOT expression
    (80) expression -> . assignment
    (81) expression -> . array_usage
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    NOT             shift and go to state 130
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    expression                     shift and go to state 157
    assignment                     shift and go to state 131
    array_usage                    shift and go to state 132

state 148

    (65) iteration_statement -> DO statement WHILE LPAREN . expression RPAREN SEMICOLON
    (74) expression -> . expression EQUALS expression
    (75) expression -> . expression LESS expression
    (76) expression -> . expression GREATER expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . NOT expression
    (80) expression -> . assignment
    (81) expression -> . array_usage
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    NOT             shift and go to state 130
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    expression                     shift and go to state 158
    assignment                     shift and go to state 131
    array_usage                    shift and go to state 132

state 149

    (66) selection_statement -> IF LPAREN expression RPAREN . compound_statement
    (67) selection_statement -> IF LPAREN expression RPAREN . statement
    (68) selection_statement -> IF LPAREN expression RPAREN . compound_statement ELSE compound_statement
    (69) selection_statement -> IF LPAREN expression RPAREN . compound_statement ELSE statement
    (70) selection_statement -> IF LPAREN expression RPAREN . statement ELSE compound_statement
    (71) selection_statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (51) compound_statement -> . LBRACE statement_list RBRACE
    (54) statement -> . iteration_statement
    (55) statement -> . declaration
    (56) statement -> . selection_statement
    (57) statement -> . return-statement
    (62) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (63) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (64) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (65) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (9) declaration -> . type assignment SEMICOLON
    (10) declaration -> . assignment SEMICOLON
    (11) declaration -> . function_call SEMICOLON
    (12) declaration -> . array_usage SEMICOLON
    (13) declaration -> . type array_usage SEMICOLON
    (66) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (67) selection_statement -> . IF LPAREN expression RPAREN statement
    (68) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (69) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (70) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (71) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (72) return-statement -> . RETURN SEMICOLON
    (73) return-statement -> . RETURN expression SEMICOLON
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR
    (61) type -> . VOID
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (42) function_call -> . ID LPAREN RPAREN
    (43) function_call -> . ID LPAREN assignment RPAREN
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    LBRACE          shift and go to state 98
    WHILE           shift and go to state 111
    DO              shift and go to state 112
    IF              shift and go to state 117
    RETURN          shift and go to state 118
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    ID              shift and go to state 62
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    compound_statement             shift and go to state 159
    statement                      shift and go to state 160
    iteration_statement            shift and go to state 107
    declaration                    shift and go to state 108
    selection_statement            shift and go to state 109
    return-statement               shift and go to state 110
    type                           shift and go to state 113
    assignment                     shift and go to state 114
    function_call                  shift and go to state 115
    array_usage                    shift and go to state 116

state 150

    (74) expression -> expression EQUALS expression .
    (74) expression -> expression . EQUALS expression
    (75) expression -> expression . LESS expression
    (76) expression -> expression . GREATER expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression

    SEMICOLON       reduce using rule 74 (expression -> expression EQUALS expression .)
    EQUALS          reduce using rule 74 (expression -> expression EQUALS expression .)
    LESS            reduce using rule 74 (expression -> expression EQUALS expression .)
    GREATER         reduce using rule 74 (expression -> expression EQUALS expression .)
    AND             reduce using rule 74 (expression -> expression EQUALS expression .)
    OR              reduce using rule 74 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 74 (expression -> expression EQUALS expression .)

  ! EQUALS          [ shift and go to state 140 ]
  ! LESS            [ shift and go to state 141 ]
  ! GREATER         [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! OR              [ shift and go to state 144 ]


state 151

    (75) expression -> expression LESS expression .
    (74) expression -> expression . EQUALS expression
    (75) expression -> expression . LESS expression
    (76) expression -> expression . GREATER expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression

    SEMICOLON       reduce using rule 75 (expression -> expression LESS expression .)
    EQUALS          reduce using rule 75 (expression -> expression LESS expression .)
    LESS            reduce using rule 75 (expression -> expression LESS expression .)
    GREATER         reduce using rule 75 (expression -> expression LESS expression .)
    AND             reduce using rule 75 (expression -> expression LESS expression .)
    OR              reduce using rule 75 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 75 (expression -> expression LESS expression .)

  ! EQUALS          [ shift and go to state 140 ]
  ! LESS            [ shift and go to state 141 ]
  ! GREATER         [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! OR              [ shift and go to state 144 ]


state 152

    (76) expression -> expression GREATER expression .
    (74) expression -> expression . EQUALS expression
    (75) expression -> expression . LESS expression
    (76) expression -> expression . GREATER expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression

    SEMICOLON       reduce using rule 76 (expression -> expression GREATER expression .)
    EQUALS          reduce using rule 76 (expression -> expression GREATER expression .)
    LESS            reduce using rule 76 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 76 (expression -> expression GREATER expression .)
    AND             reduce using rule 76 (expression -> expression GREATER expression .)
    OR              reduce using rule 76 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 76 (expression -> expression GREATER expression .)

  ! EQUALS          [ shift and go to state 140 ]
  ! LESS            [ shift and go to state 141 ]
  ! GREATER         [ shift and go to state 142 ]
  ! AND             [ shift and go to state 143 ]
  ! OR              [ shift and go to state 144 ]


state 153

    (77) expression -> expression AND expression .
    (74) expression -> expression . EQUALS expression
    (75) expression -> expression . LESS expression
    (76) expression -> expression . GREATER expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression

    SEMICOLON       reduce using rule 77 (expression -> expression AND expression .)
    AND             reduce using rule 77 (expression -> expression AND expression .)
    OR              reduce using rule 77 (expression -> expression AND expression .)
    RPAREN          reduce using rule 77 (expression -> expression AND expression .)
    EQUALS          shift and go to state 140
    LESS            shift and go to state 141
    GREATER         shift and go to state 142

  ! EQUALS          [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 143 ]
  ! OR              [ shift and go to state 144 ]


state 154

    (78) expression -> expression OR expression .
    (74) expression -> expression . EQUALS expression
    (75) expression -> expression . LESS expression
    (76) expression -> expression . GREATER expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression

    SEMICOLON       reduce using rule 78 (expression -> expression OR expression .)
    AND             reduce using rule 78 (expression -> expression OR expression .)
    OR              reduce using rule 78 (expression -> expression OR expression .)
    RPAREN          reduce using rule 78 (expression -> expression OR expression .)
    EQUALS          shift and go to state 140
    LESS            shift and go to state 141
    GREATER         shift and go to state 142

  ! EQUALS          [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! AND             [ shift and go to state 143 ]
  ! OR              [ shift and go to state 144 ]


state 155

    (62) iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .

    RBRACE          reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    WHILE           reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    DO              reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    IF              reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    RETURN          reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    INT             reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    FLOAT           reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    CHAR            reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    VOID            reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    ID              reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    NUMBER          reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    APOST           reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    LPAREN          reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    MINUS           reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    LETTER          reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    ELSE            reduce using rule 62 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)


state 156

    (63) iteration_statement -> WHILE LPAREN expression RPAREN statement .

    RBRACE          reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    DO              reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    INT             reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    CHAR            reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    VOID            reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    APOST           reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LETTER          reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)


state 157

    (64) iteration_statement -> DO compound_statement WHILE LPAREN expression . RPAREN SEMICOLON
    (74) expression -> expression . EQUALS expression
    (75) expression -> expression . LESS expression
    (76) expression -> expression . GREATER expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression

    RPAREN          shift and go to state 161
    EQUALS          shift and go to state 140
    LESS            shift and go to state 141
    GREATER         shift and go to state 142
    AND             shift and go to state 143
    OR              shift and go to state 144


state 158

    (65) iteration_statement -> DO statement WHILE LPAREN expression . RPAREN SEMICOLON
    (74) expression -> expression . EQUALS expression
    (75) expression -> expression . LESS expression
    (76) expression -> expression . GREATER expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression

    RPAREN          shift and go to state 162
    EQUALS          shift and go to state 140
    LESS            shift and go to state 141
    GREATER         shift and go to state 142
    AND             shift and go to state 143
    OR              shift and go to state 144


state 159

    (66) selection_statement -> IF LPAREN expression RPAREN compound_statement .
    (68) selection_statement -> IF LPAREN expression RPAREN compound_statement . ELSE compound_statement
    (69) selection_statement -> IF LPAREN expression RPAREN compound_statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    WHILE           reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    DO              reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    IF              reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    RETURN          reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    INT             reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    FLOAT           reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    CHAR            reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    VOID            reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    ID              reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    NUMBER          reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    APOST           reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    LPAREN          reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    MINUS           reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    LETTER          reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    ELSE            shift and go to state 163

  ! ELSE            [ reduce using rule 66 (selection_statement -> IF LPAREN expression RPAREN compound_statement .) ]


state 160

    (67) selection_statement -> IF LPAREN expression RPAREN statement .
    (70) selection_statement -> IF LPAREN expression RPAREN statement . ELSE compound_statement
    (71) selection_statement -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    DO              reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    INT             reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    CHAR            reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    VOID            reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    APOST           reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LETTER          reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 164

  ! ELSE            [ reduce using rule 67 (selection_statement -> IF LPAREN expression RPAREN statement .) ]


state 161

    (64) iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 165


state 162

    (65) iteration_statement -> DO statement WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 166


state 163

    (68) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE . compound_statement
    (69) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE . statement
    (51) compound_statement -> . LBRACE statement_list RBRACE
    (54) statement -> . iteration_statement
    (55) statement -> . declaration
    (56) statement -> . selection_statement
    (57) statement -> . return-statement
    (62) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (63) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (64) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (65) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (9) declaration -> . type assignment SEMICOLON
    (10) declaration -> . assignment SEMICOLON
    (11) declaration -> . function_call SEMICOLON
    (12) declaration -> . array_usage SEMICOLON
    (13) declaration -> . type array_usage SEMICOLON
    (66) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (67) selection_statement -> . IF LPAREN expression RPAREN statement
    (68) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (69) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (70) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (71) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (72) return-statement -> . RETURN SEMICOLON
    (73) return-statement -> . RETURN expression SEMICOLON
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR
    (61) type -> . VOID
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (42) function_call -> . ID LPAREN RPAREN
    (43) function_call -> . ID LPAREN assignment RPAREN
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    LBRACE          shift and go to state 98
    WHILE           shift and go to state 111
    DO              shift and go to state 112
    IF              shift and go to state 117
    RETURN          shift and go to state 118
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    ID              shift and go to state 62
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    compound_statement             shift and go to state 167
    statement                      shift and go to state 168
    iteration_statement            shift and go to state 107
    declaration                    shift and go to state 108
    selection_statement            shift and go to state 109
    return-statement               shift and go to state 110
    type                           shift and go to state 113
    assignment                     shift and go to state 114
    function_call                  shift and go to state 115
    array_usage                    shift and go to state 116

state 164

    (70) selection_statement -> IF LPAREN expression RPAREN statement ELSE . compound_statement
    (71) selection_statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (51) compound_statement -> . LBRACE statement_list RBRACE
    (54) statement -> . iteration_statement
    (55) statement -> . declaration
    (56) statement -> . selection_statement
    (57) statement -> . return-statement
    (62) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (63) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (64) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (65) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (9) declaration -> . type assignment SEMICOLON
    (10) declaration -> . assignment SEMICOLON
    (11) declaration -> . function_call SEMICOLON
    (12) declaration -> . array_usage SEMICOLON
    (13) declaration -> . type array_usage SEMICOLON
    (66) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (67) selection_statement -> . IF LPAREN expression RPAREN statement
    (68) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (69) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (70) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (71) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (72) return-statement -> . RETURN SEMICOLON
    (73) return-statement -> . RETURN expression SEMICOLON
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR
    (61) type -> . VOID
    (14) assignment -> . ID ASSIGN assignment
    (15) assignment -> . ID ASSIGN function_call
    (16) assignment -> . ID ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . ID COMMA assignment
    (19) assignment -> . NUMBER COMMA assignment
    (20) assignment -> . ID PLUS assignment
    (21) assignment -> . ID MINUS assignment
    (22) assignment -> . ID TIMES assignment
    (23) assignment -> . ID DIVIDE assignment
    (24) assignment -> . ID MODULUS assignment
    (25) assignment -> . NUMBER PLUS assignment
    (26) assignment -> . NUMBER MINUS assignment
    (27) assignment -> . NUMBER TIMES assignment
    (28) assignment -> . NUMBER DIVIDE assignment
    (29) assignment -> . NUMBER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . NUMBER PLUS PLUS
    (34) assignment -> . ID PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . NUMBER MINUS MINUS
    (37) assignment -> . ID MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . NUMBER
    (40) assignment -> . ID
    (41) assignment -> . LETTER
    (42) function_call -> . ID LPAREN RPAREN
    (43) function_call -> . ID LPAREN assignment RPAREN
    (44) array_usage -> . ID LBRACKET assignment RBRACKET

    LBRACE          shift and go to state 98
    WHILE           shift and go to state 111
    DO              shift and go to state 112
    IF              shift and go to state 117
    RETURN          shift and go to state 118
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    ID              shift and go to state 62
    NUMBER          shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    LETTER          shift and go to state 24

    statement                      shift and go to state 169
    compound_statement             shift and go to state 170
    iteration_statement            shift and go to state 107
    declaration                    shift and go to state 108
    selection_statement            shift and go to state 109
    return-statement               shift and go to state 110
    type                           shift and go to state 113
    assignment                     shift and go to state 114
    function_call                  shift and go to state 115
    array_usage                    shift and go to state 116

state 165

    (64) iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    CHAR            reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    VOID            reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    APOST           reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    LETTER          reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 64 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)


state 166

    (65) iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    CHAR            reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    VOID            reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    APOST           reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    LETTER          reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 65 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)


state 167

    (68) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .

    RBRACE          reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    WHILE           reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    DO              reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    IF              reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    RETURN          reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    INT             reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    FLOAT           reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    CHAR            reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    VOID            reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    ID              reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    NUMBER          reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    APOST           reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    LPAREN          reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    MINUS           reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    LETTER          reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    ELSE            reduce using rule 68 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)


state 168

    (69) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .

    RBRACE          reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    WHILE           reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    DO              reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    IF              reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    RETURN          reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    INT             reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    FLOAT           reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    CHAR            reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    VOID            reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    ID              reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    NUMBER          reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    APOST           reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    LPAREN          reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    MINUS           reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    LETTER          reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    ELSE            reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)


state 169

    (71) selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .

    RBRACE          reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    DO              reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INT             reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CHAR            reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    VOID            reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMBER          reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    APOST           reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUS           reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LETTER          reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 170

    (70) selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .

    RBRACE          reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    WHILE           reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    DO              reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    IF              reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    RETURN          reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    INT             reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    FLOAT           reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    CHAR            reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    VOID            reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    ID              reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    NUMBER          reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    APOST           reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    LPAREN          reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    MINUS           reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    LETTER          reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    ELSE            reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQUALS in state 145 resolved as shift
WARNING: shift/reduce conflict for LESS in state 145 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 145 resolved as shift
WARNING: shift/reduce conflict for AND in state 145 resolved as shift
WARNING: shift/reduce conflict for OR in state 145 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 159 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 160 resolved as shift
